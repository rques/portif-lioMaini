// //Import the functions you need from the SDKs you need
// import { initializeApp } from "firebase/app";
// import { getAnalytics } from "firebase/analytics";
// // TODO: Add SDKs for Firebase products that you want to use
// // https://firebase.google.com/docs/web/setup#available-libraries

// // Your web app's Firebase configuration
// // For Firebase JS SDK v7.20.0 and later, measurementId is optional
// const firebaseConfig = {
//   apiKey: "AIzaSyC1N-REULnarmHcDmlorIl6uu0JV7r2u3Y",
//   authDomain: "potifolio-maini-16bf8.firebaseapp.com",
//   databaseURL: "https://potifolio-maini-16bf8-default-rtdb.firebaseio.com",
//   projectId: "potifolio-maini-16bf8",
//   storageBucket: "potifolio-maini-16bf8.firebasestorage.app",
//   messagingSenderId: "839760268246",
//   appId: "1:839760268246:web:cdceb0906ebb4a3b8d7277",
//   measurementId: "G-WZ6S2WTPYT"
// };

// // Initialize Firebase
// const app = initializeApp(firebaseConfig);
// const analytics = getAnalytics(app);

// npm install firebase
// CLI = npm install -g firebase-tools
// firebase login
// firebase init
// firebase deploy --only hosting:potifolio-maini-16bf8-1cc8a





//teste do banco de dados 

// import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js";
// import { getAnalytics } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-analytics.js";
// import {
//   getStorage,
//   ref,
//   uploadBytes,
//   listAll,
//   getDownloadURL
// } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-storage.js";

// window.addEventListener("DOMContentLoaded", () => {
//   const firebaseConfig = {
//     apiKey: "AIzaSyC1N-REULnarmHcDmlorIl6uu0JV7r2u3Y",
//     authDomain: "potifolio-maini-16bf8.firebaseapp.com",
//     databaseURL: "https://potifolio-maini-16bf8-default-rtdb.firebaseio.com",
//     projectId: "potifolio-maini-16bf8",
//     storageBucket: "potifolio-maini-16bf8.appspot.com",
//     messagingSenderId: "839760268246",
//     appId: "1:839760268246:web:cdceb0906ebb4a3b8d7277",
//     measurementId: "G-WZ6S2WTPYT"
//   };

//   const app = initializeApp(firebaseConfig);
//   const analytics = getAnalytics(app);
//   const storage = getStorage(app);

//   function getIcon(fileName) {
//     const name = fileName.toLowerCase();
//     if (name.endsWith(".ppt") || name.endsWith(".pptx")) {
//       return "https://www.tutkit.com/storage/media/packages/1118/1118-powerpoint-kurs-grundlagen-experten-tipps-fuer-ueberzeugende-praesentationen-feat.jpg";
//     }
//     if (name.endsWith(".xls") || name.endsWith(".xlsx")) {
//       return "https://tse2.mm.bing.net/th/id/OIP.1Vm5c5pPfXiDlbrTxfOkUQHaEK?rs=1&pid=ImgDetMain&o=7&rm=3";
//     }
//     if (name.endsWith(".doc") || name.endsWith(".docx")) {
//       return "https://licendi.com/media/magefan_blog/2022/07/microsoft-word-logo-1024x575-1.jpg";
//     }
//     if (name.endsWith(".pdf")) {
//       return "https://img.icons8.com/color/452/pdf.png";
//     }
//     return "https://img.icons8.com/ios-filled/50/000000/file.png";
//   }

//   const input = document.getElementById("fileUpload");
//   const grid = document.querySelector(".arquivos-grid");

//   async function carregarArquivos() {
//     grid.innerHTML = "";
//     const listRef = ref(storage, "arquivos/");
//     try {
//       const result = await listAll(listRef);
//       for (const itemRef of result.items) {
//         const url = await getDownloadURL(itemRef);
//         const icon = getIcon(itemRef.name);

//         const link = document.createElement("a");
//         link.href = url;
//         link.download = itemRef.name;
//         link.className = "arquivo-item";
//         link.target = "_blank";
//         link.rel = "noopener noreferrer";
//         link.innerHTML = `
//           <img src="${icon}" alt="Ícone Documento" />
//           <span>${itemRef.name}</span>
//         `;
//         grid.appendChild(link);
//       }
//     } catch (error) {
//       console.error("Erro ao carregar arquivos:", error);
//     }
//   }

//   input.addEventListener("change", async (e) => {
//     const file = e.target.files[0];
//     if (!file) return;

//     const fileRef = ref(storage, "arquivos/" + file.name);
//     try {
//       await uploadBytes(fileRef, file);
//       alert("Upload realizado com sucesso!");
//       input.value = "";
//       carregarArquivos();
//     } catch (error) {
//       alert("Erro no upload: " + error.message);
//     }
//   });

//   carregarArquivos();
// });
